---
title: Installing and Configuring Dynatrace Full-Stack Add-on for VMware Tanzu
owner: Partners
---

This topic explains how to install and configure the Dynatrace Full-Stack Add-on for VMware Tanzu.

<p class="note"><strong>Note:</strong> The syntax for the Dynatrace manifest is identical for TAS and TKGI. As such, if no detailed include/exclude rules are used the same manifest can be utilized for both TAS and TKGI. In deployments utilizing Pivotal Operations Manager (OpsMan) 2.5 or greater where both TAS and TKGI are configured by the same OpsMan instance, this means both TAS and TKGI can be monitored simulatenously via a single deployment of the Dynatrace Full-Stack Add-on.</p>

## <a id='create-mfest'></a> Create the Dynatrace Manifest

Follow these steps to create the Dynatrace manifest for your deployment:

1. Create a Dynatrace manifest file called `runtime-config-dynatrace.yml`, using the code below as a template to get started.

<p class="note"><strong>Note:</strong> With Operations Manager 2.9, the use of properties at the add-on level has been deprecated. These properties have been moved to the job level.</p>

```
releases:
- name: dynatrace-oneagent
  version: 1.4.0

addons:
- name: dynatrace-oneagent-addon
  jobs:
  - name: dynatrace-oneagent
    release: dynatrace-oneagent
    properties:
      dynatrace:
        environmentid: <environmentId>
        apitoken: <paas-token> # sorry it's confusing :(
        ###
        # optional properties below
        ###
        # Replace with your Dynatrace Managed URL, including the environment ID.
        # An example URL might look like the following
        apiurl: https://{your-managed-cluster.com}/e/{environmentid}/api
        # Set to 'all' if you want to accept all self-signed SSL certificates.
        sslmode: all
        # Specify a direct download URL for Dynatrace OneAgent.
        # If this propery is set, BOSH will download OneAgent from this location.
        downloadurl: https://direct-download-url-for-agent
        # Specify the proxy to be used for communication.
        proxy: https://your-proxy-url
        # Specify in which hostgroup the VMs in this deployments belong
        hostgroup: example_hostgroup
        # Define host tags for the VMs in this deployment
        hosttags: landscape=production team=my_team
        # Define custom properties for the VMs in this deployment
        hostprops: Department=Acceptance Stage=Sprint
        # Enable cloud infrastructure monitoring mode.
        # Set this to 1 to activate it
        infraonly: 0
        # Enable validation of the download via certificate
        # Set this to true to active it
        validatedownload: false
        # Hand over any installer argument
        # Use either this OR the hostgroup, hosttags, infraonly, proxy properties.
        # Usage of 'installerargs' will overwrite the others!
        installerargs: HOST_GROUP=example_hostgroup INFRA_ONLY=0
  include:
    deployments:
      - name-of-your-deployment
    stemcell:
      - os: ubuntu-bionic
  exclude:
    lifecycle: errand


# optional: extra addon configuration for Windows cells
- name: dynatrace-oneagent-windows-addon
  jobs:
  - name: dynatrace-oneagent-windows
    release: dynatrace-oneagent
    properties:
      dynatrace:
        environmentid: <environmentId>
        apitoken: <paas-token>  # sorry it's confusing :(
        # All of the optional properties for the Linux addon shown above (for example, apiurl, hostgroup) can also be used here.  
  include:
    deployments:
      - name-of-your-deployment
    stemcell:
      - os: windows
  exclude:
    lifecycle: errand
```


2. Replace the values listed in the template as follows:
  * `releases: - version`: Specify the version number of your Dynatrace Full-Stack Add-on for VMware Tanzu download from Pivotal Network.
  * `jobs: - name`: Do not change the name of this job. It must be `dynatrace-oneagent` for Linux VMs.
  * `include: stemcell - os<`: Change to the OS type of your linux stemcell(s).
  * `environmentid`: Replace with your Dynatrace environment ID.
  * `apitoken`: Replace with your PaaS token from the Dynatrace UI.
  * `apiurl`: If using Dynatrace Managed, replace with your Dynatrace Managed URL, including the environment ID. An example URL might look like the following: `https://{your-managed-cluster.com}/e/{environmentid}/api`

3. (Optional) The add-on supports additional configuration properties:
  * `sslmode`: Set to `all` if you want to accept all self-signed SSL certificates.
  * `downloadurl`: Specify a direct download URL for Dynatrace OneAgent. If this propery is set, BOSH will download OneAgent from this location.
  * `proxy`: Specify the proxy to be used for communication.
  * `hostgroup`: Specify hostgroup for VMs in this deployment.
  * `hosttags`: Specify host tags for VMs in this deployment.
  * `hostprops`: Specify custom properties for VMs in this deployment.
  * `infraonly`: Set to `1` to enable cloud infrastructure monitoring mode. This disables all deep process monitoring.
  * `validatedownload`: Set to `true` to enable validation of the download via certificate.
  * `installerargs`: Supports Dynatrace [installer arguments](https://www.dynatrace.com/support/help/technology-support/operating-systems/linux/installation/customize-oneagent-installation-on-linux/), suggested values include setting USER=vcap and GROUP=vcap to allow Dynatrace plugins to monitor HAProxy. Note, setting hostgroup, hosttags, infraonly, proxy properties here will override settings deployed elsewhere in runtime config.

4. If you also want to deploy Dynatrace to Windows Diego cells, configure a second add-on section for the `dynatrace-oneagent-windows` job. The properties for `environmentid`, `apitoken`, and `apiurl` remain the same as with the normal Linux configuration.
  * `jobs: - name`: For Windows cells, this must be `dynatrace-oneagent-windows`.
  * `include: stemcell - os`: Change to the OS type of your Windows stemcell(s).

<p class="note"><strong>Note:</strong> To modify the configuration of an existing deployment, you must update the manifest file and redeploy.</p>

## <a id="download-deploy"></a> Download and Deploy the Dynatrace Full-Stack Add-on for VMware Tanzu

After deploying Ops Manager, do the following to download and deploy the Dynatrace Full-Stack Add-on for VMware Tanzu:

1. Download the Dynatrace Full-Stack Add-on for VMware Tanzu software binary from [Pivotal Network](https://network.pivotal.io/products/dynatrace-fullstack-addon) to your local machine.

1. Copy the software binary to your Ops Manager instance.
<pre class="terminal">$ scp -i PATH/TO/PRIVATE/KEY dynatrace-release.tar.gz ubuntu@YOUR-OPS-MANAGER-VM-IP:</pre>

1. Copy the Dynatrace manifest file to your Ops Manager instance.
<pre class="terminal">$ scp -i PATH/TO/PRIVATE/KEY runtime-config-dynatrace.yml ubuntu@YOUR-OPS-MANAGER-VM-IP:</pre>

1. SSH into Ops Manager.
 <pre class="terminal">$ ssh -i PATH-TO-PRIVATE-KEY ubuntu@YOUR-OPS-MANAGER-VM-IP</pre>

1. On the Ops Manager VM, navigate to the software binary location in your working directory.
<pre class="terminal">
$ cd PATH-TO-BINARY</pre>

1. Log in to the BOSH Director.
  <ol type="i">
    <li>
      On the Ops Manager VM, create an alias in the BOSH CLI for your BOSH Director IP address. For example:
      <pre class="terminal">$ bosh alias-env my-env -e 10.0.16.10</pre>
    </li>
    <li>
      Log in to the BOSH Director, specifying the newly created alias. 
      For example:
      <pre class="terminal">$ bosh -e my-env login</pre>
    </li>
  </ol>

1. Upload your release.
  <pre class="terminal">$ bosh -e my-env upload-release PATH-TO-BINARY/dynatrace-release.tar.gz</pre>

1. (Optional) From the command line, you can confirm that upload of the Dynatrace software binary is complete. You should see the Dynatrace binary file.
  <pre class="terminal">$ bosh -e my-env releases</pre>

1. Update your runtime configuration to include the Dynatrace Add-on for VMware Tanzu.
  <p class="note"><strong>Note</strong>: If you installed other BOSH add-ons, you must merge the Dynatrace manifest into your existing add-on manifest. Append the contents of <code>runtime-config-dynatrace.yml</code> to your existing add-on YML file.</p>
  <pre class="terminal">$ bosh -e my-env update-runtime-config PATH/runtime-config-dynatrace.yml</pre>

1. Verify your runtime configuration changes match what you specified in the Dynatrace manifest file.
  <pre class="terminal">$ bosh -e my-env runtime-config</pre>
    For example: 
    <pre class="terminal">
    Acting as user 'admin' on 'micro'
    releases:
    <span>-</span> {name: dynatrace-oneagent, version: 1.4.0}
    addons:
    <span>-</span> name: dynatrace-oneagent-addon
      jobs:
      <span>-</span> name: dynatrace-oneagent
        release: dynatrace-oneagent
    ...
  </pre>

1. Navigate to your **Installation Dashboard** in Ops Manager.

1. Click **Apply Changes**.

## <a id='advanced-configuration'></a> Advanced Configuration

This section explains advanced configuration of the Dynatrace Full-Stack Add-on for VMware Tanzu.

## <a id='host-groups'></a> About the Hostgroup Property

Dynatrace utilizes host group functionality to automatically group hosts. Host groups make it easier to apply unique configurations within Dynatrace to groups of hosts. Functionality that can be configured based on host group includes anomaly detection and OneAgent updates. Host groups also change how process groups are detected. When the same process is running in two different host groups, Dynatrace will create one process group for each host group. Additionally, automatic tagging can make use of host groups. 

For more information read the [full host group documentation.](https://www.dynatrace.com/support/help/how-to-use-dynatrace/hosts/configuration/organize-your-environment-using-host-groups/)

## <a id='host-groups-examples'></a> Hostgroup Property Examples

An example use of the hostgroup property is to create hostgroups for individual Tanzu Kubernetes Grid - Integrated (TKGI) clusters 

1. Log in to the BOSH Director.
  <ol type="i">
    <li>
      Log in to TKGI. 
      For example:
      <pre class="terminal">$ tkgi login -a api.tkgi.somedomain.com -u someusername</pre>
    </li>
  </ol>
1. Determine the UUID for the TKGI cluster (will begin with service-instance_) 
  <ol type="i">
  <li>
    For example:
    <pre class="terminal">$ tkgi cluster my-cluster</pre>
    output snipped for brevity:
    <pre class="terminal"> UUID:                     a4604071-07df-49e7-92d1-2effc9e3fe42</pre>
  </li>
  </ol> 
  
1. Create a Dynatrace manifest file called `runtime-config-dynatrace.yml`, using the code below as a template to get started.

```
releases:
- {name: dynatrace-oneagent, version: 1.4.0}

addons:
- name: dynatrace-oneagent-addon
  jobs:
  - name: dynatrace-oneagent
    release: dynatrace-oneagent
  include:
    deployments:
    # enter the BOSH deployment name, in the format of service-instance_<UUID-OBTAINED-IN-PREVIOUS-STEP>
    - service-instance_a4604071-07df-49e7-92d1-2effc9e3fe42
    stemcell:
    - os: ubuntu-bionic
  exclude:
    lifecycle: errand
  properties:
    dynatrace:
      environmentid: <environmentid>
      apitoken: <token>
      # Specify a hostgroup for this TKGI cluster
      hostgroup: tkgi_cluster_xyz
```

1. Update your runtime configuration to include the Dynatrace Add-on for VMware Tanzu.
  <pre class="terminal">$ bosh -e my-env update-runtime-config PATH/runtime-config-dynatrace.yml</pre>

1. Navigate to your **Installation Dashboard** in Ops Manager.

1. Click **Apply Changes**.

## <a id='host-groups-examples'></a> Multiple Deployment Host Group Example

When applying host groups to multiple deployments, the entire addon block is duplicated with unique job names, see below example:

```
releases:
- {name: dynatrace-oneagent, version: 1.4.0}

addons:
- name: dynatrace-oneagent-addon-xyz
  jobs:
  - name: dynatrace-oneagent
    release: dynatrace-oneagent
  include:
    deployments:
    # enter the BOSH deployment name, in the format of service-instance_<UUID-OBTAINED-IN-PREVIOUS-STEP>
    - service-instance_a4604071-07df-49e7-92d1-2effc9e3fe42
    stemcell:
    - os: ubuntu-xenial
  exclude:
    lifecycle: errand
  properties:
    dynatrace:
      environmentid: <environmentid>
      apitoken: <token>
      # Specify a hostgroup for this TKGI cluster
      hostgroup: tkgi_cluster_xyz
- name: dynatrace-oneagent-abc
  jobs:
  - name: dynatrace-oneagent
    release: dynatrace-oneagent
  include:
    deployments:
    # enter the BOSH deployment name, in the format of service-instance_<UUID-OBTAINED-IN-PREVIOUS-STEP>
    - service-instance_adee170c-21ba-4274-97a4-cab13ed07bb7
    stemcell:
    - os: ubuntu-xenial
  exclude:
    lifecycle: errand
  properties:
    dynatrace:
      environmentid: <environmentid>
      apitoken: <token>
      # Specify a hostgroup for this TKGI cluster
      hostgroup: tkgi_cluster_abc         
```
